;
;*********************************************************
;
;                 *** VIDEO DEMO ***
;
;

KBD	= $C000			;APPLE KEYBOARD DATA
KSTRB	= $C010			;KEYBOARD DATA CLEAR
VREG	= $C081			;VDP REGISTER
VDATA	= $C080			;VDP RAM
;
	*= $200			;PROGRAM STARTING ADDRESS
;
;**************** INITIALIZE VDG *************************
;
	LDY #$87		;REGISTER SELECT
	LDX #$07		;INITIALIZE COUNTER
INIT1	LDA ITAB,X		;LOAD INIT TABLE
	JSR SREG		;WRITE TO VDP
	DEY			;DECREMENT REGISTER
	DEX			;DECREMENT COUNTER
	BNE INIT1		;DONE?
;
;************** CLEAR ALL MEMORY *************************
;
	LDY #$40		;BYTE2 ADDRESS SET UP
	LDA #$00		;BYTE1 ADDRESS SET UP
	JSR SREG 		;WRITE TO VDP
	LDX #$C0		;COUNTER HIGH BYTE
NEXF	LDY #$00		;COUNTER LOW BYTE
FILL	STA VDATA		;WRITE TO VDP RAM
	INY			;INCREMENT LOW COUNTER
	BNE FILL		;LOW COUNTER FULL?
	INX			;INCREMENT HIGH COUNTER
	BNE NEXF		;HIGH COUNTER FULL?
;
;******** LOAD SPRITE ATTRIBUTES *************************
;
LOOP	LDY #$47		;BYTE2 AT 0700 HEX
	LDA #$00		;BYTE1 ADDRESS SET UP
	JSR SREG		;WRITE TO VDP
	LDX #$00		;INITIALIZE COUNTER
NEXA	LDA ATAB,X		;LOAD ATTRIBUTE
	STA VDATA		;STORE TO VDP RAM
	INX			;INCREMENT COUNTER
	TXA
	CMP #$10		;TEST COUNTER
	BNE NEXA		;DONE?
;
;********** LOAD SPRITE PATTERNS *************************
;
	LDY #$40		;BYTE2 AT 0000 HEX
	LDA #$00		;BYTE1 ADDRESS SET UP
	JSR SREG		;WRITE TO VDP
	LDX #$00		;INITIALIZE COUNTER
NEXS	LDA PTAB,X		;LOAD PATTERN BYTE
	STA VDATA		;STORE TO VDP RAM
	INX			;INCREMENT COUNTER
	TXA
	CMP #$80		;TEST COUNTER
	BNE NEXS		;DONE?
;
;************* CHANGE BACKGROUND *************************
;
CBACK	LDA KBD			;TEST FOR
	CMP #$CF		;"O" KEY INPUT
	BNE CSIZE		;TO SET BACKGROUND COLOR
	JSR LOADN		;READ KEYBOARD
	LDY #$87		;BYTE1 REGISTER 7
	JSR SREG		;STORE TO VDP
;
;******************* CHANGE SIZE *************************
;
CSIZE	LDA KBD			;TEST FOR LEFT ARROW
	CMP #$88		;MAGNIFICATION X 1
	BNE ONE
	LDA ITAB+1		;LOAD REGISTER 1
	AND #$FE		;MASK 0 ON LSB
	LDY #$81		;BYTE1 REGISTER 1
	JSR SREG		;STORE TO VDP
ONE	CMP #$95		;TEST FOR RIGHT ARROW
	BNE MOVE		;MAGNIFICATION X 2
	LDA ITAB+1		;LOAD REGISTER 1
	ORA #$01		;MASK 1 ON LSB
	LDY #$81		;BYTE1 REGISTER 1
	JSR SREG		;STORE TO VDP
;
;****************** MOVE SPRITES *************************
;
MOVE	LDA KBD			;MOVE?
	CMP #$CD		;TEST FOR "M" KEY
	BNE JUMP
	INC ATAB		;SPRITE0 UP
	DEC ATAB+1		;SPRITE0 LEFT
	INC ATAB+4		;SPRITE1 UP
	INC ATAB+5		;SPRITE1 RIGHT
	DEC ATAB+8		;SPRITE2 DOWN
	DEC ATAB+9		;SPRITE2 LEFT
	DEC ATAB+$C		;SPRITE3 DOWN
	INC ATAB+$D		;SPRITE3 RIGHT
JUMP	BIT KSTRB		;CLEAR KEYBOARD
	JMP LOOP		;JUMP TO START
;
;
;********* STORE VIDEO REGISTERS *************************
;
SREG	STA VREG		;STORE BYTE1
	STY VREG		;STORE BYTE2
	RTS			;RETURN
;
;************* LOAD KEYBOARD INPUT ***********************
;
LOADN	BIT KSTRB		;CLEAR KEYBOARD
WAIT	BIT KBD			;TEST KEYBOARD
	BPL WAIT		;IS KEY PRESSED ?
	LDA KBD
	AND #$F0		;TEST IF NUMERICAL INPUT
	CMP #$C0
	BEQ LETER
	LDA KBD
	AND #$0F		;MASK OFF HIGH NIBBLE
	RTS			;RETURN
LETER	LDA KBD
	CLC
	ADC #$09		;CONVERT INPUT TO HEX VALUE
	AND #$0F		;MASK OFF HIGH NIBBLE
	RTS			;RETURN
;
;************************ TABLES ***
;
ITAB	.BYT $02,$C2,$01,$80	;INITIALIZE TABLE
	.BYT $01,$0E,$00,$01
;
ATAB	.BYT $40,$60,$00,$03	;SPRITE 0 ATTRIBUTE
	.BYT $60,$60,$04,$07	;SPRITE 1 ATTRIBUTE
	.BYT $40,$80,$08,$0B	;SPRITE 2 ATTRIBUTE
	.BYT $60,$80,$0C,$0F	;SPRITE 3 ATTRIBUTE
;
PTAB	.WORD $FF80,$8080,$8080,$8080 ;SPRITE 0 PATTERN
	.WORD $8080,$8080,$8080,$80FF ;16 X 16 PIXELS
	.WORD $FF01,$0101,$0101,$0101 ;32 BYTES / SPRITE
	.WORD $0101,$0101,$0101,$01FF
;
	.WORD $FF80,$879F,$9880,$8083 ;SPRITE 1 PATTERN
	.WORD $8380,$8098,$9F8F,$80FF
	.WORD $FF01,$F1F9,$1919,$31F1
	.WORD $F139,$1919,$F9F1,$01FF
;
	.WORD $AA55,$AA55,$AA55,$AA55 ;SPRITE 2 PATTERN
	.WORD $AA55,$AA55,$AA55,$AA55
	.WORD $AA55,$AA55,$AA55,$AA55
	.WORD $AA55,$AA55,$AA55,$AA55
;
	.WORD $AAAA,$AAAA,$AAAA,$AAAA ;SPRITE 3 PATTERN
	.WORD $AAAA,$AAAA,$AAAA,$AAAA
	.WORD $AAAA,$AAAA,$AAAA,$AAAA
	.WORD $AAAA,$AAAA,$AAAA,$AAAA
;
	.END


























